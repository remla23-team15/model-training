name: Test

# Trigger when branches are pushed
on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-dvc@v1

      # Set Python version
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Cache dependencies
      - name: Cache dependencies setup
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # dvc pull files
      - name: local config info GDrive
        run: dvc remote modify --local myremote gdrive_service_account_json_file_path remla15-57766ff41451.json


      - name: dvc pull
        run: |
          dvc pull


      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ci.txt
          
      - name: Download NLTK resources
        run: |
          python -c "import nltk; nltk.download('wordnet'); nltk.download('averaged_perceptron_tagger'); nltk.download('punkt')"

      # Run tests
      - name: Run tests
        run: |
          coverage run -m pytest --junitxml=reports/junit/junit.xml
          coverage report
          coverage xml

      # Upload Junit report
      - name: Upload Junit report
        uses: actions/upload-artifact@v3
        with:
          name: junit-report
          path: reports/junit/junit.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      # Upload Coverage report
      - name: Upload Coverage report
        uses: actions/upload-artifact@v3
        with:
          name: cobertura-report
          path: reports/coverage/xml/coverage.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      # Create test results and coverage report comment
      - name: Pytest results comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          pytest-xml-coverage-path: ./reports/coverage/xml/coverage.xml
          junitxml-path: ./reports/junit/junit.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
